#!/usr/bin/env python

from __future__ import print_function

import pprint


microbench_output = \
"""
ncodebooks = 4
amm multisplit N, D, M, ncodebooks:   9984, 512,  10,  4     (5x5): 0.047 (2124255319/s), 0.043 (2321860465/s), 0.042 (2377142857/s), 0.039 (2560000000/s), 0.036 (2773333333/s),
amm multisplit N, D, M, ncodebooks:   9984, 512, 100,  4     (5x5): 0.213 (4687323943/s), 0.213 (4687323943/s), 0.206 (4846601941/s), 0.209 (4777033492/s), 0.192 (5200000000/s),
amm multisplit N, D, M, ncodebooks:  57568,  24,   3,  4     (5x5): 0.172 (1004093023/s), 0.172 (1004093023/s), 0.175 (986880000/s), 0.175 (986880000/s), 0.173 (998289017/s),
amm multisplit N, D, M, ncodebooks: 115168,  24,   3,  4     (5x5): 0.395 (874693670/s), 0.398 (868100502/s), 0.386 (895088082/s), 0.384 (899750000/s), 0.377 (916456233/s),
amm multisplit N, D, M, ncodebooks: 230368,  24,   3,  4     (5x5): 1.001 (690413586/s), 1.011 (683584569/s), 1.002 (689724550/s), 1.046 (660711281/s), 1.01 (684261386/s),
amm multisplit N, D, M, ncodebooks:  49280,  27,   2,  4     (5x5): 0.123 (801300813/s), 0.123 (801300813/s), 0.12 (821333333/s), 0.121 (814545454/s), 0.119 (828235294/s),
ncodebooks = 8
amm multisplit N, D, M, ncodebooks:   9984, 512,  10,  8     (5x5): 0.071 (1406197183/s), 0.067 (1490149253/s), 0.067 (1490149253/s), 0.065 (1536000000/s), 0.066 (1512727272/s),
amm multisplit N, D, M, ncodebooks:   9984, 512, 100,  8     (5x5): 0.32 (3120000000/s), 0.354 (2820338983/s), 0.356 (2804494382/s), 0.322 (3100621118/s), 0.349 (2860744985/s),
amm multisplit N, D, M, ncodebooks:  57568,  24,   3,  8     (5x5): 0.342 (504982456/s), 0.331 (521764350/s), 0.341 (506463343/s), 0.342 (504982456/s), 0.333 (518630630/s),
amm multisplit N, D, M, ncodebooks: 115168,  24,   3,  8     (5x5): 0.853 (405045720/s), 0.912 (378842105/s), 0.867 (398505190/s), 0.948 (364455696/s), 0.874 (395313501/s),
amm multisplit N, D, M, ncodebooks: 230368,  24,   3,  8     (5x5): 1.989 (347463046/s), 2.058 (335813411/s), 2.017 (342639563/s), 1.951 (354230650/s), 1.931 (357899533/s),
amm multisplit N, D, M, ncodebooks:  49280,  27,   2,  8     (5x5): 0.334 (295089820/s), 0.254 (388031496/s), 0.266 (370526315/s), 0.252 (391111111/s), 0.247 (399028340/s),
ncodebooks = 16
amm multisplit N, D, M, ncodebooks:   9984, 512,  10, 16     (5x5): 0.146 (683835616/s), 0.141 (708085106/s), 0.134 (745074626/s), 0.133 (750676691/s), 0.154 (648311688/s),
amm multisplit N, D, M, ncodebooks:   9984, 512, 100, 16     (5x5): 0.593 (1683642495/s), 0.594 (1680808080/s), 0.601 (1661231281/s), 0.553 (1805424954/s), 0.629 (1587281399/s),
amm multisplit N, D, M, ncodebooks:  57568,  24,   3, 16     (5x5): 0.617 (279909238/s), 0.62 (278554838/s), 0.611 (282657937/s), 0.616 (280363636/s), 0.644 (268173913/s),
amm multisplit N, D, M, ncodebooks: 115168,  24,   3, 16     (5x5): 1.74 (198565517/s), 1.712 (201813084/s), 1.754 (196980615/s), 1.797 (192267111/s), 1.73 (199713294/s),
amm multisplit N, D, M, ncodebooks: 230368,  24,   3, 16     (5x5): 3.857 (179181747/s), 3.732 (185183279/s), 3.695 (187037618/s), 3.715 (186030686/s), 3.681 (187748981/s),
amm multisplit N, D, M, ncodebooks:  49280,  27,   2, 16     (5x5): 0.574 (171707317/s), 0.534 (184569288/s), 0.578 (170519031/s), 0.571 (172609457/s), 0.566 (174134275/s),
ncodebooks = 32
amm multisplit N, D, M, ncodebooks:   9984, 512,  10, 32     (5x5): 0.304 (328421052/s), 0.285 (350315789/s), 0.276 (361739130/s), 0.274 (364379562/s), 0.287 (347874564/s),
amm multisplit N, D, M, ncodebooks:   9984, 512, 100, 32     (5x5): 1.12 (891428571/s), 1.075 (928744186/s), 1.095 (911780821/s), 1.073 (930475302/s), 1.095 (911780821/s),
amm multisplit N, D, M, ncodebooks:  57568,  24,   3, 32     (5x5): 1.741 (99198161/s), 1.421 (121536945/s), 1.405 (122920996/s), 1.407 (122746268/s), 1.337 (129172774/s),
amm multisplit N, D, M, ncodebooks: 115168,  24,   3, 32     (5x5): 3.639 (94944765/s), 3.664 (94296943/s), 3.601 (95946681/s), 3.545 (97462341/s), 3.905 (88477336/s),
amm multisplit N, D, M, ncodebooks: 230368,  24,   3, 32     (5x5): 7.91 (87370922/s), 7.77 (88945173/s), 7.439 (92902809/s), 7.565 (91355452/s), 7.656 (90269592/s),
amm multisplit N, D, M, ncodebooks:  49280,  27,   2, 32     (5x5): 1.26 (78222222/s), 1.018 (96817288/s), 1.11 (88792792/s), 1.128 (87375886/s), 1.082 (91090573/s),
ncodebooks = 64
amm multisplit N, D, M, ncodebooks:   9984, 512,  10, 64     (5x5): 0.635 (157228346/s), 0.616 (162077922/s), 0.63 (158476190/s), 0.618 (161553398/s), 0.62 (161032258/s),
amm multisplit N, D, M, ncodebooks:   9984, 512, 100, 64     (5x5): 2.338 (427031650/s), 2.103 (474750356/s), 2.036 (490373280/s), 2.041 (489171974/s), 2.024 (493280632/s),
amm multisplit N, D, M, ncodebooks:  57568,  24,   3, 64     (5x5): 2.821 (61220843/s), 2.726 (63354365/s), 2.689 (64226106/s), 2.659 (64950733/s), 2.887 (59821267/s),
amm multisplit N, D, M, ncodebooks: 115168,  24,   3, 64     (5x5): 6.596 (52380836/s), 6.888 (50160278/s), 6.638 (52049412/s), 6.631 (52104358/s), 6.71 (51490909/s),
amm multisplit N, D, M, ncodebooks: 230368,  24,   3, 64     (5x5): 15.348 (45028928/s), 15.567 (44395451/s), 15.296 (45182008/s), 14.754 (46841805/s), 14.515 (47613089/s),
amm multisplit N, D, M, ncodebooks:  49280,  27,   2, 64     (5x5): 2.25 (43804444/s), 2.253 (43746116/s), 2.213 (44536827/s), 2.108 (46755218/s), 2.105 (46821852/s),
matmul N, D, M:  10000,   2,  10     (5x5): 0.031 (3225806451/s), 0.031 (3225806451/s), 0.031 (3225806451/s), 0.031 (3225806451/s), 0.031 (3225806451/s),
matmul N, D, M:  10000,   4,  10     (5x5): 0.054 (1851851851/s), 0.038 (2631578947/s), 0.038 (2631578947/s), 0.05 (2000000000/s), 0.051 (1960784313/s),
matmul N, D, M:  10000,   6,  10     (5x5): 0.046 (2173913043/s), 0.046 (2173913043/s), 0.047 (2127659574/s), 0.046 (2173913043/s), 0.053 (1886792452/s),
matmul N, D, M:  10000,   8,  10     (5x5): 0.052 (1923076923/s), 0.056 (1785714285/s), 0.056 (1785714285/s), 0.051 (1960784313/s), 0.051 (1960784313/s),
matmul N, D, M:  10000,  12,  10     (5x5): 0.078 (1282051282/s), 0.078 (1282051282/s), 0.078 (1282051282/s), 0.078 (1282051282/s), 0.078 (1282051282/s),
matmul N, D, M:  10000,  16,  10     (5x5): 0.083 (1204819277/s), 0.083 (1204819277/s), 0.083 (1204819277/s), 0.083 (1204819277/s), 0.083 (1204819277/s),
matmul N, D, M:  10000,  24,  10     (5x5): 0.124 (806451612/s), 0.12 (833333333/s), 0.119 (840336134/s), 0.119 (840336134/s), 0.119 (840336134/s),
matmul N, D, M:  10000,  27,  10     (5x5): 0.151 (662251655/s), 0.15 (666666666/s), 0.152 (657894736/s), 0.161 (621118012/s), 0.152 (657894736/s),
matmul N, D, M:  10000,  32,  10     (5x5): 0.179 (558659217/s), 0.165 (606060606/s), 0.165 (606060606/s), 0.166 (602409638/s), 0.168 (595238095/s),
matmul N, D, M:  10000,  48,  10     (5x5): 0.328 (304878048/s), 0.26 (384615384/s), 0.251 (398406374/s), 0.241 (414937759/s), 0.245 (408163265/s),
matmul N, D, M:  10000,  64,  10     (5x5): 0.545 (183486238/s), 0.391 (255754475/s), 0.365 (273972602/s), 0.324 (308641975/s), 0.365 (273972602/s),
matmul N, D, M:  10000, 512,  10     (5x5): 5.979 (16725204/s), 6.197 (16136840/s), 6.092 (16414970/s), 5.945 (16820857/s), 6.064 (16490765/s),
matmul N, D, M:  10000,   2, 100     (5x5): 0.34 (2941176470/s), 0.328 (3048780487/s), 0.344 (2906976744/s), 0.326 (3067484662/s), 0.328 (3048780487/s),
matmul N, D, M:  10000,   4, 100     (5x5): 0.342 (2923976608/s), 0.347 (2881844380/s), 0.34 (2941176470/s), 0.34 (2941176470/s), 0.35 (2857142857/s),
matmul N, D, M:  10000,   6, 100     (5x5): 0.382 (2617801047/s), 0.38 (2631578947/s), 0.423 (2364066193/s), 0.387 (2583979328/s), 0.39 (2564102564/s),
matmul N, D, M:  10000,   8, 100     (5x5): 0.419 (2386634844/s), 0.415 (2409638554/s), 0.425 (2352941176/s), 0.419 (2386634844/s), 0.418 (2392344497/s),
matmul N, D, M:  10000,  12, 100     (5x5): 0.628 (1592356687/s), 0.69 (1449275362/s), 0.61 (1639344262/s), 0.63 (1587301587/s), 0.614 (1628664495/s),
matmul N, D, M:  10000,  16, 100     (5x5): 0.609 (1642036124/s), 0.612 (1633986928/s), 0.624 (1602564102/s), 0.62 (1612903225/s), 0.62 (1612903225/s),
matmul N, D, M:  10000,  24, 100     (5x5): 0.788 (1269035532/s), 0.774 (1291989664/s), 0.774 (1291989664/s), 0.784 (1275510204/s), 0.807 (1239157372/s),
matmul N, D, M:  10000,  27, 100     (5x5): 1.001 (999000999/s), 0.987 (1013171225/s), 1.01 (990099009/s), 1.107 (903342366/s), 1.03 (970873786/s),
matmul N, D, M:  10000,  32, 100     (5x5): 1.021 (979431929/s), 1.037 (964320154/s), 1.082 (924214417/s), 1.019 (981354268/s), 1.023 (977517106/s),
matmul N, D, M:  10000,  48, 100     (5x5): 1.342 (745156482/s), 1.434 (697350069/s), 1.309 (763941940/s), 1.609 (621504039/s), 1.513 (660938532/s),
matmul N, D, M:  10000,  64, 100     (5x5): 1.796 (556792873/s), 1.833 (545553737/s), 1.899 (526592943/s), 1.871 (534473543/s), 1.986 (503524672/s),
matmul N, D, M:  10000, 512, 100     (5x5): 16.763 (59655192/s), 15.703 (63682098/s), 15.92 (62814070/s), 14.929 (66983722/s), 15.29 (65402223/s),
matmul N, D, M:  57593,   2,   3     (5x5): 0.077 (2243883116/s), 0.077 (2243883116/s), 0.075 (2303720000/s), 0.075 (2303720000/s), 0.081 (2133074074/s),
matmul N, D, M:  57593,   4,   3     (5x5): 0.098 (1763051020/s), 0.097 (1781226804/s), 0.098 (1763051020/s), 0.097 (1781226804/s), 0.098 (1763051020/s),
matmul N, D, M:  57593,   6,   3     (5x5): 0.127 (1360464566/s), 0.124 (1393379032/s), 0.123 (1404707317/s), 0.123 (1404707317/s), 0.123 (1404707317/s),
matmul N, D, M:  57593,   8,   3     (5x5): 0.146 (1183417808/s), 0.146 (1183417808/s), 0.145 (1191579310/s), 0.145 (1191579310/s), 0.145 (1191579310/s),
matmul N, D, M:  57593,  12,   3     (5x5): 0.258 (669686046/s), 0.246 (702353658/s), 0.242 (713962809/s), 0.248 (696689516/s), 0.25 (691116000/s),
matmul N, D, M:  57593,  16,   3     (5x5): 0.283 (610526501/s), 0.284 (608376760/s), 0.292 (591708904/s), 0.291 (593742268/s), 0.279 (619279569/s),
matmul N, D, M:  57593,  24,   3     (5x5): 0.503 (343497017/s), 0.44 (392679545/s), 0.435 (397193103/s), 0.436 (396282110/s), 0.444 (389141891/s),
matmul N, D, M:  57593,  27,   3     (5x5): 0.551 (313573502/s), 0.552 (313005434/s), 0.548 (315290145/s), 0.549 (314715846/s), 0.55 (314143636/s),
matmul N, D, M:  57593,  32,   3     (5x5): 0.812 (212782019/s), 0.767 (225265971/s), 0.722 (239306094/s), 0.705 (245076595/s), 0.705 (245076595/s),
matmul N, D, M:  57593,  48,   3     (5x5): 1.287 (134249417/s), 1.249 (138333867/s), 1.214 (142322075/s), 1.201 (143862614/s), 1.23 (140470731/s),
matmul N, D, M:  57593,  64,   3     (5x5): 1.854 (93192556/s), 1.858 (92991926/s), 1.834 (94208833/s), 1.768 (97725678/s), 2.031 (85070901/s),
matmul N, D, M:  57593, 512,   3     (5x5): 37.111 (4655735/s), 39.749 (4346750/s), 37.352 (4625696/s), 35.955 (4805423/s), 38.749 (4458927/s),
matmul N, D, M: 115193,   2,   3     (5x5): 0.179 (1930608938/s), 0.163 (2120116564/s), 0.151 (2288602649/s), 0.149 (2319322147/s), 0.153 (2258686274/s),
matmul N, D, M: 115193,   4,   3     (5x5): 0.202 (1710787128/s), 0.211 (1637815165/s), 0.209 (1653488038/s), 0.203 (1702359605/s), 0.203 (1702359605/s),
matmul N, D, M: 115193,   6,   3     (5x5): 0.309 (1118378640/s), 0.256 (1349917968/s), 0.261 (1324057471/s), 0.262 (1319003816/s), 0.26 (1329150000/s),
matmul N, D, M: 115193,   8,   3     (5x5): 0.332 (1040900602/s), 0.32 (1079934375/s), 0.328 (1053594512/s), 0.302 (1144301324/s), 0.309 (1118378640/s),
matmul N, D, M: 115193,  12,   3     (5x5): 0.567 (609486772/s), 0.513 (673643274/s), 0.49 (705263265/s), 0.489 (706705521/s), 0.513 (673643274/s),
matmul N, D, M: 115193,  16,   3     (5x5): 0.66 (523604545/s), 0.66 (523604545/s), 0.664 (520450301/s), 0.667 (518109445/s), 0.637 (542510204/s),
matmul N, D, M: 115193,  24,   3     (5x5): 1.022 (338139921/s), 1.015 (340471921/s), 1.029 (335839650/s), 1 (345579000/s), 1.013 (341144126/s),
matmul N, D, M: 115193,  27,   3     (5x5): 1.284 (269142523/s), 1.265 (273184980/s), 1.29 (267890697/s), 1.265 (273184980/s), 1.283 (269352299/s),
matmul N, D, M: 115193,  32,   3     (5x5): 1.846 (187204225/s), 1.848 (187001623/s), 1.903 (181596952/s), 1.856 (186195581/s), 1.868 (184999464/s),
matmul N, D, M: 115193,  48,   3     (5x5): 2.701 (127944835/s), 2.702 (127897483/s), 2.932 (117864597/s), 2.898 (119247412/s), 2.805 (123201069/s),
matmul N, D, M: 115193,  64,   3     (5x5): 4.012 (86136340/s), 3.96 (87267424/s), 3.882 (89020865/s), 3.897 (88678214/s), 3.832 (90182411/s),
matmul N, D, M: 115193, 512,   3     (5x5): 91.193 (3789534/s), 92.906 (3719662/s), 92.453 (3737888/s), 89.898 (3844123/s), 97.149 (3557205/s),
matmul N, D, M: 230393,   2,   3     (5x5): 0.344 (2009241279/s), 0.335 (2063220895/s), 0.331 (2088154078/s), 0.327 (2113697247/s), 0.32 (2159934375/s),
matmul N, D, M: 230393,   4,   3     (5x5): 0.47 (1470593617/s), 0.462 (1496058441/s), 0.481 (1436962577/s), 0.473 (1461266384/s), 0.457 (1512426695/s),
matmul N, D, M: 230393,   6,   3     (5x5): 0.585 (1181502564/s), 0.583 (1185555746/s), 0.654 (1056848623/s), 0.628 (1100603503/s), 0.647 (1068282843/s),
matmul N, D, M: 230393,   8,   3     (5x5): 0.764 (904684554/s), 0.758 (911845646/s), 0.774 (892996124/s), 0.762 (907059055/s), 0.748 (924036096/s),
matmul N, D, M: 230393,  12,   3     (5x5): 1.262 (547685419/s), 1.208 (572168046/s), 1.238 (558302907/s), 1.232 (561021915/s), 1.252 (552059904/s),
matmul N, D, M: 230393,  16,   3     (5x5): 1.534 (450573011/s), 1.505 (459255149/s), 1.423 (485719606/s), 1.481 (466697501/s), 1.481 (466697501/s),
matmul N, D, M: 230393,  24,   3     (5x5): 2.131 (324344908/s), 2.108 (327883776/s), 2.148 (321777932/s), 2.104 (328507129/s), 2.156 (320583951/s),
matmul N, D, M: 230393,  27,   3     (5x5): 2.636 (262207511/s), 2.638 (262008718/s), 2.654 (260429163/s), 2.642 (261612036/s), 2.653 (260527327/s),
matmul N, D, M: 230393,  32,   3     (5x5): 4.164 (165989193/s), 3.835 (180229204/s), 3.84 (179994531/s), 3.796 (182080874/s), 3.872 (178506973/s),
matmul N, D, M: 230393,  48,   3     (5x5): 6 (115196500/s), 6.093 (113438207/s), 6.187 (111714724/s), 6.033 (114566384/s), 5.998 (115234911/s),
matmul N, D, M: 230393,  64,   3     (5x5): 8.759 (78910720/s), 8.418 (82107270/s), 8.354 (82736293/s), 8.369 (82588003/s), 8.357 (82706593/s),
matmul N, D, M: 230393, 512,   3     (5x5): 268.32 (2575959/s), 267.14 (2587357/s), 264.48 (2613340/s), 265.22 (2606078/s), 273.86 (2523886/s),
matmul N, D, M:  49284,   2,   2     (5x5): 0.046 (2142782608/s), 0.046 (2142782608/s), 0.047 (2097191489/s), 0.046 (2142782608/s), 0.046 (2142782608/s),
matmul N, D, M:  49284,   4,   2     (5x5): 0.064 (1540125000/s), 0.063 (1564571428/s), 0.07 (1408114285/s), 0.063 (1564571428/s), 0.063 (1564571428/s),
matmul N, D, M:  49284,   6,   2     (5x5): 0.08 (1232100000/s), 0.08 (1232100000/s), 0.085 (1159623529/s), 0.083 (1187566265/s), 0.082 (1202048780/s),
matmul N, D, M:  49284,   8,   2     (5x5): 0.097 (1016164948/s), 0.097 (1016164948/s), 0.097 (1016164948/s), 0.099 (995636363/s), 0.099 (995636363/s),
matmul N, D, M:  49284,  12,   2     (5x5): 0.167 (590227544/s), 0.157 (627821656/s), 0.183 (538622950/s), 0.16 (616050000/s), 0.159 (619924528/s),
matmul N, D, M:  49284,  16,   2     (5x5): 0.203 (485556650/s), 0.188 (524297872/s), 0.185 (532800000/s), 0.183 (538622950/s), 0.186 (529935483/s),
matmul N, D, M:  49284,  24,   2     (5x5): 0.288 (342250000/s), 0.281 (350775800/s), 0.281 (350775800/s), 0.292 (337561643/s), 0.288 (342250000/s),
matmul N, D, M:  49284,  27,   2     (5x5): 0.552 (178565217/s), 0.403 (244585607/s), 0.381 (258708661/s), 0.392 (251448979/s), 0.395 (249539240/s),
matmul N, D, M:  49284,  32,   2     (5x5): 0.552 (178565217/s), 0.518 (190285714/s), 0.512 (192515625/s), 0.465 (211974193/s), 0.561 (175700534/s),
matmul N, D, M:  49284,  48,   2     (5x5): 0.989 (99664307/s), 0.93 (105987096/s), 0.929 (106101184/s), 0.921 (107022801/s), 0.915 (107724590/s),
matmul N, D, M:  49284,  64,   2     (5x5): 1.393 (70759511/s), 1.449 (68024844/s), 1.264 (77981012/s), 1.333 (73944486/s), 1.256 (78477707/s),
matmul N, D, M:  49284, 512,   2     (5x5): 31.337 (3145419/s), 29.927 (3293614/s), 29.529 (3338006/s), 29.543 (3336424/s), 28.661 (3439098/s),
"""


def load_matmul_times_for_n_d_m():
    lines = microbench_output.split('\n')
    matmul_lines = [line for line in lines if line.startswith('matmul')]
    matmul_shape_to_times = {}
    matmul_shape_to_thruputs = {}
    for line in matmul_lines:
        start_idx = line.find(':') + 1
        end_idx = line.find('(')
        nmd_str = line[start_idx:end_idx]
        N, D, M = [int(substr) for substr in nmd_str.split(',')[:3]]
        speeds_str = line[line.find('):') + 2:]
        speed_pairs = speeds_str.split(',')[:5]
        times = []
        thruputs = []
        for pair in speed_pairs:
            pair = pair.strip()
            time_str, thruput_str = pair.split()
            times.append(float(time_str))
            thruput_str = thruput_str.strip('()s/')
            thruputs.append(float(thruput_str))

        key = (N, D, M)
        matmul_shape_to_times[key] = times
        matmul_shape_to_thruputs[key] = thruputs

    # pprint.pprint(matmul_shape_to_times)
    # pprint.pprint(matmul_shape_to_thruputs)

    return matmul_shape_to_times, matmul_shape_to_thruputs


def load_multisplit_times_for_n_d_m():
    lines = microbench_output.split('\n')
    lines = [line for line in lines if line.startswith('amm multisplit')]
    shape_ncodebooks_to_times = {}
    shape_ncodebooks_to_thruputs = {}
    for line in lines:
        start_idx = line.find(':') + 1
        end_idx = line.find('(')
        nmd_str = line[start_idx:end_idx]
        N, D, M, C = [int(substr) for substr in nmd_str.split(',')[:4]]
        speeds_str = line[line.find('):') + 2:]
        speed_pairs = speeds_str.split(',')[:5]
        times = []
        thruputs = []
        for pair in speed_pairs:
            pair = pair.strip()
            time_str, thruput_str = pair.split()
            times.append(float(time_str))
            thruput_str = thruput_str.strip('()s/')
            thruputs.append(float(thruput_str))

        key = (N, D, M, C)
        shape_ncodebooks_to_times[key] = times
        shape_ncodebooks_to_thruputs[key] = thruputs

    # pprint.pprint(shape_ncodebooks_to_times)
    # pprint.pprint(shape_ncodebooks_to_thruputs)

    return shape_ncodebooks_to_times, shape_ncodebooks_to_thruputs


def main():
    load_matmul_times_for_n_d_m()
    load_multisplit_times_for_n_d_m()


if __name__ == '__main__':
    main()
